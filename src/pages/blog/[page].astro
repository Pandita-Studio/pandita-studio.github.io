---
import type { GetStaticPaths, Page } from "astro";

import Main from "@layouts/Main.astro";
import MainLink from "@components/atoms/MainLink.astro";
import Navbar from "@components/molecules/Navbar.astro";
import Footer from "@components/molecules/Footer.astro";
import PostPreview from "@components/molecules/PostPreview.astro";
import WrittenByDisplay from "@components/molecules/WrittenByDisplay.astro";

import { getCollection, type CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	let posts = (await getCollection("blog")).sort(
		(a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime(),
	);

	return paginate(posts, { pageSize: 3 });
};

const { page } = Astro.props as { page: Page<CollectionEntry<"blog">> };

const featured = await getEntry(
	"blog",
	"introducing-the-book-of-tornaluna-cats",
);

if (!featured) {
	throw new Error(`Could not find featured blog post.`);
}

const featuredAuthor = await getEntry("authors", featured.data.author.id);

if (!featuredAuthor) {
	throw new Error(`Could not find author ${featured.data.author.id}`);
}
---

<Main title="Pandita | Blog">
	<Navbar />

	<div class="w-full min-h-screen mt-32 lg:mt-24 mb-12">
		<div class="w-full flex items-center justify-center px-4">
			<div class="w-full max-w-6xl">
				<div class="w-full flex flex-col gap-6">
					<header class="max-w-prose">
						<nav
							aria-label="Breadcrumb"
							class="text-sm text-gray-600"
						>
							<a class="hover:underline" href="/#home">Home</a>
							<span class="mx-2">/</span>
							<span class="font-medium">Blog</span>
						</nav>

						<h1
							class="mt-5 mb-5 orbitron-regular tracking-widest text-3xl lg:text-4xl text-center lg:text-left"
						>
							BLOG
						</h1>

						<p class="text-gray-700 leading-relaxed text-lg">
							Explore behind-the-scenes stories, art, and
							development insights from Pandita Studio â€” a studio
							creating anime-inspired, story-driven games with
							heart. ðŸ’–
						</p>
					</header>

					<section>
						<h2 class="mt-6 font-bold text-2xl">Featured</h2>
						<hr class="border-gray-200 my-4" />

						<div
							class="w-full grid grid-cols-1 md:grid-cols-2 gap-6 items-start"
						>
							<div class="w-full">
								<img
									src={featured.data.image}
									alt={`${featured.data.title} cover image`}
									class="w-full rounded object-cover aspect-video"
								/>
							</div>

							<div class="flex flex-col gap-3">
								<h3 class="text-2xl font-bold">
									{featured.data.title}
								</h3>

								<WrittenByDisplay
									showAvatar
									avatar={featuredAuthor.data.picture}
									authorName={featuredAuthor.data.name}
									date={featured.data.publishDate}
									className="mt-1"
								/>

								<p class="text-gray-700 leading-relaxed">
									{featured.data.excerpt}
								</p>

								<div>
									<MainLink href={`/blog/p/${featured.slug}`}>
										continue reading â†’
									</MainLink>
								</div>
							</div>
						</div>
					</section>

					<section>
						<h2 class="mt-8 font-bold text-2xl">Latest</h2>
						<hr class="border-gray-200 my-4" />

						<div class="w-full grid gap-6">
							{
								page.data.map((post) => {
									return <PostPreview postSlug={post.slug} />;
								})
							}
						</div>

						<nav
							class="flex flex-wrap items-center gap-2 mt-6"
							aria-label="Pagination"
						>
							{
								() => {
									if (page.currentPage != 1) {
										return (
											<a
												href="/blog/1"
												class="px-3 py-1 rounded border transition-colors duration-200 bg-white text-gray-600 border-gray-300 hover:bg-gray-100"
											>
												First
											</a>
										);
									}
								}
							}

							{
								() => {
									if (page.url.prev)
										return (
											<a
												href={page.url.prev}
												class="px-3 py-1 rounded border transition-colors duration-200 bg-white text-gray-600 border-gray-300 hover:bg-gray-100"
											>
												Previous
											</a>
										);
								}
							}

							{
								(() => {
									const buttons = [];
									const start = Math.max(
										1,
										page.currentPage - 1,
									);
									const end =
										Math.min(
											page.lastPage,
											page.currentPage + 3,
										) + 1;

									for (let i = start; i < end; i++) {
										const href = `/blog/${i}/`;
										const isActive = i === page.currentPage;

										buttons.push(
											<a
												href={href}
												class={`px-3 py-1 rounded border transition-colors duration-200 ${
													isActive
														? "bg-pink-500 text-white border-pink-500"
														: "bg-white text-gray-600 border-gray-300 hover:bg-gray-100"
												}`}
											>
												{i}
											</a>,
										);
									}

									return buttons;
								})()
							}

							{
								() => {
									if (page.url.next)
										return (
											<a
												href={page.url.next}
												class="px-3 py-1 rounded border transition-colors duration-200 bg-white text-gray-600 border-gray-300 hover:bg-gray-100"
											>
												Next
											</a>
										);
								}
							}

							{
								() => {
									if (page.lastPage > 3) {
										return (
											<a
												href={`/blog/${page.lastPage}`}
												class="px-3 py-1 rounded border transition-colors duration-200 bg-white text-gray-600 border-gray-300 hover:bg-gray-100"
											>
												Last
											</a>
										);
									}
								}
							}
						</nav>

						<div class="text-gray-400 mt-3 text-sm">
							<i
								>Page {page.currentPage} of {page.lastPage} - viewing
								{page.size} of {page.total} posts.</i
							>
						</div>

						<hr class="border-gray-200 mt-6" />
					</section>
				</div>
			</div>
		</div>
	</div>

	<Footer />
</Main>
