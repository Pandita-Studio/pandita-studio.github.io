---
import type { GetStaticPaths, Page } from "astro";

import Main from "@layouts/Main.astro";
import BadgeLink from "@components/atoms/BadgeLink.astro";
import Navbar from "@components/molecules/Navbar.astro";
import Footer from "@components/molecules/Footer.astro";
import Paginator from "@components/molecules/Paginator.astro";
import PostPreview from "@components/molecules/PostPreview.astro";

import { ExternalLink } from "@lucide/astro";

import { getCollection } from "astro:content";
import type { InferEntrySchema, CollectionEntry } from "astro:content";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
	let authors = await getCollection("authors");

	let paths: { params: { name: string }; props: any }[] = [];

	for (const author of authors) {
		const authorPosts = (await getCollection("blog"))
			.filter((post) => post.data.author.id == author.id)
			.sort(
				(a, b) =>
					b.data.publishDate.getTime() - a.data.publishDate.getTime(),
			);

		const pages = paginate(authorPosts, {
			pageSize: 3,
			params: { name: author.id },
			props: {
				author: author.data,
			},
		});

		paths.push(...pages);
	}

	return paths;
};

const { page } = Astro.props as { page: Page<CollectionEntry<"blog">> };
const { author } = Astro.props as { author: InferEntrySchema<"authors"> };
---

<Main>
	<Navbar />

	<div class="w-full min-h-screen mt-24 lg:mt-20">
		<div class="w-full flex items-start justify-center">
			<div class="w-full p-6 max-w-4xl">
				<!-- Breadcrumbs -->
				<nav aria-label="Breadcrumb" class="text-sm text-gray-600 mb-4">
					<a class="hover:underline" href="/#home">Home</a>
					<span class="mx-2">/</span>
					<a class="hover:underline" href="/blog/1">Blog</a>
					<span class="mx-2">/</span>
					<a class="hover:underline" href="/blog/authors">Authors</a>
					<span class="mx-2">/</span>
					<span class="font-medium">{author.name}</span>
				</nav>
				<!-- Header -->
				<header
					class="w-full my-6 flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6"
				>
					<div class="flex items-center gap-4">
						<!-- Optional avatar if present -->
						{
							author.picture ? (
								<img
									src={author.picture}
									alt={`${author.name} avatar`}
									class="w-24 h-24 rounded-full object-cover flex-shrink-0"
								/>
							) : (
								<div class="w-24 h-24 rounded-full bg-gray-100 flex items-center justify-center text-gray-500 text-lg">
									{author.name?.slice(0, 1)}
								</div>
							)
						}

						<div>
							<h1
								class="orbitron-regular tracking-widest text-3xl lg:text-4xl"
							>
								{author.name}
							</h1>
							{
								author.bio && (
									<p class="mt-2 text-gray-500 max-w-prose">
										{author.bio}
									</p>
								)
							}

							<div
								class="mt-3 flex flex-col sm:flex-row sm:items-center gap-3 text-sm text-gray-500"
							>
								{
									author.email && (
										<BadgeLink
											href={`mailto:${author.email}`}
										>
											{author.email}
										</BadgeLink>
									)
								}
								{
									author.website && (
										<BadgeLink
											targetBlank
											href={
												author.website.startsWith(
													"http",
												)
													? author.website
													: `https://${author.website}`
											}
										>
											<ExternalLink size={16} />
											{author.website
												.replace(/^https?:\/\//, "")
												.replace(/\/$/, "")}
										</BadgeLink>
									)
								}
							</div>
						</div>
					</div>

					<div class="flex items-center gap-4">
						<hr
							class="h-8 border-l border-gray-200 mx-2 hidden lg:block"
						/>
						<div class="text-sm text-gray-500">
							{page.total} posts
						</div>
					</div>
				</header>

				<hr class="border-gray-200 mb-6" />

				<section class="w-full flex flex-col gap-6">
					{
						page.data.map((post: any) => {
							return (
								<article class="w-full max-w-4xl">
									<PostPreview postSlug={post.slug} />
								</article>
							);
						})
					}
				</section>

				<Paginator 
					currentPage={page.currentPage} 
					totalPages={page.lastPage} 
					baseUrl={`/blog/authors/${author.name}`}
				/>

				<hr class="border-gray-200 mt-6" />
			</div>
		</div>
	</div>

	<Footer />
</Main>
